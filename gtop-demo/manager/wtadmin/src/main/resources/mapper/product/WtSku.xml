<?xml version="1.0"  encoding="utf-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gt.manager.product.repository.WtSkuDAO">
    <!--查询结果Map-->
    <resultMap type="com.gt.manager.entity.wtSku.WtSku" id="wtSku">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="branchesId" column="branches_id" jdbcType="INTEGER"/>
        <result property="pId" column="p_id" jdbcType="INTEGER"/>
        <result property="goodsCode" column="goods_code" jdbcType="VARCHAR"/>
        <result property="brandId" column="brand_id" jdbcType="INTEGER"/>
        <result property="skuCode" column="sku_code" jdbcType="VARCHAR"/>
        <result property="skuName" column="sku_name" jdbcType="VARCHAR"/>
        <result property="goodsPic" column="goods_pic" jdbcType="VARCHAR"/>
        <result property="goodsBar" column="goods_bar" jdbcType="VARCHAR"/>
        <result property="typeCode" column="type_code" jdbcType="VARCHAR"/>
        <result property="goodsSpec" column="goods_spec" jdbcType="VARCHAR"/>
        <result property="goodsWeight" column="goods_weight" jdbcType="DECIMAL"/>
        <result property="goodsUtil" column="goods_util" jdbcType="INTEGER"/>
        <result property="goodsSize" column="goods_size" jdbcType="VARCHAR"/>
        <result property="goodsColor" column="goods_color" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="costPrice" column="cost_price" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="INTEGER"/>
        <result property="onSales" column="on_sales" jdbcType="INTEGER"/>
        <result property="sellPrice" column="sell_price" jdbcType="INTEGER"/>
        <result property="shelfOnTime" column="shelf_on_time" jdbcType="INTEGER"/>
        <result property="shellOffReason" column="shell_off_reason" jdbcType="VARCHAR"/>
        <result property="createId" column="create_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateId" column="update_id" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
        <result property="updateName" column="update_name" jdbcType="VARCHAR"/>
        <result property="delState" column="del_state" jdbcType="INTEGER"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
    </resultMap>

    <!--插入商品sku表-->
    <insert id="insert" parameterType="wtSku" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_wt_sku (id, branches_id, p_id, goods_code, brand_id, sku_code, sku_name, goods_pic,
                              goods_bar, type_code, goods_spec, goods_weight, goods_util, goods_size,
                              goods_color, status, cost_price, price, on_sales,
                              sell_price, shelf_on_time, shell_off_reason,
                              create_id, create_time, update_id, update_time, version) VALUES
            (#{id}, #{branchesId}, #{pId}, #{goodsCode}, #{brandId}, #{skuCode}, #{skuName}, #{goodsPic}, #{goodsBar},
                    #{typeCode}, #{goodsSpec}, #{goodsWeight}, #{goodsUtil}, #{goodsSize}, #{goodsColor}, #{status},
                                               #{costPrice}, #{price}, #{onSales}, #{sellPrice}, #{shelfOnTime},
             #{shellOffReason}, #{createId}, #{createTime}, #{updateId}, #{updateTime}, #{version})
    </insert>

    <!--删除商品sku表-->
    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM t_wt_sku
        WHERE id = #{0}
    </delete>

    <!--更新商品sku表-->
    <update id="update" parameterType="wtSku">
        UPDATE t_wt_sku
        <set>
            <!-- 更新主键 -->
            <if test="id!=null">
                id=#{id},
            </if>
            <!-- 更新机构(城市)ID -->
            <if test="branchesId!=null">
                branches_id=#{branchesId},
            </if>
            <!-- 更新商品ID -->
            <if test="pId!=null">
                p_id=#{pId},
            </if>
            <!-- 更新商品编号（SPU编号） -->
            <if test="goodsCode!=null and goodsCode!=''">
                goods_code=#{goodsCode},
            </if>
            <!-- 更新品牌ID -->
            <if test="brandId!=null">
                brand_id=#{brandId},
            </if>
            <!-- 更新SKU编号 -->
            <if test="skuCode!=null and skuCode!=''">
                sku_code=#{skuCode},
            </if>
            <!-- 更新商品条形码 -->
            <if test="goodsBar!=null and goodsBar!=''">
                goods_bar=#{goodsBar},
            </if>
            <!-- 更新类别编号，多级 ，‘000005000005’ 6位代表一级编号 -->
            <if test="typeCode!=null and typeCode!=''">
                type_code=#{typeCode},
            </if>
            <!-- 更新商品规格 -->
            <if test="goodsSpec!=null and goodsSpec!=''">
                goods_spec=#{goodsSpec},
            </if>
            <!-- 更新商品的重量 -->
            <if test="goodsWeight!=null and goodsWeight!=''">
                goods_weight=#{goodsWeight},
            </if>
            <!-- 更新单位值（1:g, 2:kg, 3：ml， 4:L) -->
            <if test="goodsUtil!=null">
                goods_util=#{goodsUtil},
            </if>
            <!-- 更新 -->
            <if test="goodsSize!=null and goodsSize!=''">
                goods_size=#{goodsSize},
            </if>
            <!-- 更新 -->
            <if test="goodsColor!=null and goodsColor!=''">
                goods_color=#{goodsColor},
            </if>
            <!-- 更新状态[1销售中（上架），2下架,3审核中，4审核不通过] -->
            <if test="status!=null">
                status=#{status},
            </if>
            <!-- 更新成本价格，（平台商品取自平台，自定义商品0） -->
            <if test="costPrice!=null">
                cost_price=#{costPrice},
            </if>
            <!-- 更新市场价 -->
            <if test="price!=null">
                price=#{price},
            </if>
            <!-- 更新是否为特价【1是特价、0不是】 -->
            <if test="onSales!=null">
                on_sales=#{onSales},
            </if>
            <!-- 更新水站销售价格 -->
            <if test="sellPrice!=null">
                sell_price=#{sellPrice},
            </if>
            <!-- 更新上架时间 -->
            <if test="shelfOnTime!=null">
                shelf_on_time=#{shelfOnTime},
            </if>
            <!-- 更新下架原因 -->
            <if test="shellOffReason!=null and shellOffReason!=''">
                shell_off_reason=#{shellOffReason},
            </if>
            <!-- 更新创建者 -->
            <if test="createId!=null">
                create_id=#{createId},
            </if>
            <!-- 更新创建时间 -->
            <if test="createTime!=null">
                create_time=#{createTime},
            </if>
            <!-- 更新修改者 -->
            <if test="updateId!=null">
                update_id=#{updateId},
            </if>
            <!-- 更新修改时间 -->
            <if test="updateTime!=null">
                update_time=#{updateTime},
            </if>
            <!-- 更新删除状态【1正常，0删除】 -->
            <if test="delState!=null">
                del_state=#{delState},
            </if>
            <!-- 更新数据版本 -->
            <if test="version!=null">
                version=#{version},
            </if>
        </set>
        WHERE id=#{id}
    </update>

    <!--主键查询商品sku表-->
    <select id="selectById" parameterType="java.lang.Long" resultMap="wtSku">
        SELECT
            id,
            branches_id,
            p_id,
            goods_code,
            brand_id,
            sku_code,
            sku_name,
            goods_pic,
            goods_bar,
            type_code,
            goods_spec,
            goods_weight,
            goods_util,
            goods_size,
            goods_color,
            status,
            cost_price,
            price,
            on_sales,
            sell_price,
            shelf_on_time,
            shell_off_reason,
            create_id,
            create_time,
            update_id,
            update_time,
            del_state,
            version
        FROM t_wt_sku
        WHERE id = #{0}
    </select>

    <!--根据条件查询商品sku表列表-->
    <select id="selectList" parameterType="wtSku" resultMap="wtSku">
        SELECT
        id,branches_id,p_id,goods_code,brand_id,sku_code,sku_name,goods_pic,goods_bar,type_code,goods_spec,goods_weight,goods_util,goods_size,goods_color,status,cost_price,price,on_sales,sell_price,shelf_on_time,shell_off_reason,create_id,create_time,update_id,update_time,del_state,version
        FROM t_wt_sku
        <where>
            1=1
            and del_state=1
            <!-- 根据主键查询 -->
            <if test="id!=null">
                AND id=#{id}
            </if>
            <!-- 根据机构(城市)ID查询 -->
            <if test="branchesId!=null">
                AND branches_id=#{branchesId}
            </if>
            <!-- 根据商品ID查询 -->
            <if test="pId!=null">
                AND p_id=#{pId}
            </if>
            <!-- 根据商品编号（SPU编号）查询 -->
            <if test="goodsCode!=null and goodsCode!=''">
                AND goods_code=#{goodsCode}
            </if>
            <!-- 根据品牌ID查询 -->
            <if test="brandId!=null">
                AND brand_id=#{brandId}
            </if>
            <!-- 根据SKU编号查询 -->
            <if test="skuCode!=null and skuCode!=''">
                AND sku_code=#{skuCode}
            </if>
            <!-- 根据商品条形码查询 -->
            <if test="goodsBar!=null and goodsBar!=''">
                AND goods_bar=#{goodsBar}
            </if>
            <!-- 根据类别编号，多级 ，‘000005000005’ 6位代表一级编号查询 -->
            <if test="typeCode!=null and typeCode!=''">
                AND type_code=#{typeCode}
            </if>
            <!-- 根据商品规格查询 -->
            <if test="goodsSpec!=null and goodsSpec!=''">
                AND goods_spec=#{goodsSpec}
            </if>
            <!-- 根据商品的重量查询 -->
            <if test="goodsWeight!=null and goodsWeight!=''">
                AND goods_weight=#{goodsWeight}
            </if>
            <!-- 根据单位值（1:g, 2:kg, 3：ml， 4:L)查询 -->
            <if test="goodsUtil!=null">
                AND goods_util=#{goodsUtil}
            </if>
            <!-- 根据查询 -->
            <if test="goodsSize!=null and goodsSize!=''">
                AND goods_size=#{goodsSize}
            </if>
            <!-- 根据查询 -->
            <if test="goodsColor!=null and goodsColor!=''">
                AND goods_color=#{goodsColor}
            </if>
            <!-- 根据状态[1销售中（上架），2下架,3审核中，4审核不通过]查询 -->
            <if test="status!=null">
                AND status=#{status}
            </if>
            <!-- 根据成本价格，（平台商品取自平台，自定义商品0）查询 -->
            <if test="costPrice!=null">
                AND cost_price=#{costPrice}
            </if>
            <!-- 根据市场价查询 -->
            <if test="price!=null">
                AND price=#{price}
            </if>
            <!-- 根据是否为特价【1是特价、0不是】查询 -->
            <if test="onSales!=null">
                AND on_sales=#{onSales}
            </if>
            <!-- 根据水站销售价格查询 -->
            <if test="sellPrice!=null">
                AND sell_price=#{sellPrice}
            </if>
            <!-- 根据上架时间查询 -->
            <if test="shelfOnTime!=null">
                AND shelf_on_time=#{shelfOnTime}
            </if>
            <!-- 根据下架原因查询 -->
            <if test="shellOffReason!=null and shellOffReason!=''">
                AND shell_off_reason=#{shellOffReason}
            </if>
            <!-- 根据创建者查询 -->
            <if test="createId!=null">
                AND create_id=#{createId}
            </if>
            <!-- 根据创建时间查询 -->
            <if test="createTime!=null">
                AND create_time=#{createTime}
            </if>
            <!-- 根据修改者查询 -->
            <if test="updateId!=null">
                AND update_id=#{updateId}
            </if>
            <!-- 根据修改时间查询 -->
            <if test="updateTime!=null">
                AND update_time=#{updateTime}
            </if>
            <!-- 根据删除状态【1正常，0删除】查询 -->
            <!-- <if test="delState!=null">
                 AND del_state=#{delState}
             </if>-->

            <!-- 根据数据版本查询 -->
            <if test="version!=null">
                AND version=#{version}
            </if>
        </where>
    </select>


    <!--更新商品上下架状态-->
    <update id="setSkuStatusBySkuCodeList" parameterType="java.util.List">
        UPDATE t_wt_sku
        <set>

            <!-- 更新状态[1销售中（上架），2下架,3审核中，4审核不通过] -->
            <if test="status!=null">
                status=#{status},
            </if>
            <!-- 更新上架时间 -->
            <if test="status==1">
                shelf_on_time=#{updateTime},
            </if>
            <!-- 更新下架原因 -->
            <if test="shellOffReason!=null and shellOffReason!=''">
                shell_off_reason=#{shellOffReason},
            </if>

            <!-- 更新修改者 -->
            <if test="loginId!=null">
                update_id=#{loginId},
            </if>
            <!-- 更新修改者 -->
            <if test="loginName!=null and loginName!=''">
                update_name=#{loginName},
            </if>
            <!-- 更新修改时间 -->
            <if test="updateTime!=null">
                update_time=#{updateTime},
            </if>

        </set>
        WHERE del_state=1 and sku_code in
        <foreach collection="skuCodeList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </update>


    <!--更新商品删除状态-->
    <update id="setSkuDelStataBySkuCodeList">
        UPDATE t_wt_sku
        <set>

            <!-- 更新状态[1销售中（上架），2下架,3审核中，4审核不通过] -->
            <if test="status!=null">
                status=#{status},
            </if>

            <!-- 更新删除状态【1正常，0删除】 -->
            <if test="delState!=null">
                del_state=#{delState},
            </if>

            <!-- 更新修改者 -->
            <if test="loginId!=null">
                update_id=#{loginId},
            </if>

            <!-- 更新修改者 -->
            <if test="loginName!=null and loginName!=''">
                update_name=#{loginName},
            </if>
            <!-- 更新修改时间 -->
            <if test="updateTime!=null">
                update_time=#{updateTime},
            </if>

        </set>
        WHERE sku_code in
        <foreach collection="skuCodeList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </update>


    <!--根据skuCode查询相关机构价格信息-->
    <select id="getBranchesPriceListBySku" parameterType="java.lang.String"
            resultType="com.gt.manager.entity.wtadmin.BranchesPriceEntity">
        SELECT
            branches_id branchesId,
            sku_code    skuCode,
            sell_price  sellPrice
        FROM t_wt_sku
        WHERE del_state = 1
              and sku_code = #{skuCode}
    </select>


    <!--根据skuCode模糊查询商品sku信息-->
    <select id="getWtSkuListBySkuCodeBlur" parameterType="java.lang.Long" resultMap="wtSku">
        SELECT
            id,
            branches_id,
            p_id,
            goods_code,
            brand_id,
            sku_code,
            goods_bar,
            type_code,
            goods_spec,
            goods_weight,
            goods_util,
            goods_size,
            goods_color,
            status,
            cost_price,
            price,
            on_sales,
            sell_price,
            shelf_on_time,
            shell_off_reason,
            create_id,
            create_time,
            update_id,
            update_time,
            del_state,
            version
        FROM t_wt_sku
        WHERE sku_code LIKE CONCAT("%", #{skuCode}, "%")
    </select>


    <!--根据商品ID查询商品sku信息-->
    <select id="getWtSkuListByProductId" parameterType="java.lang.Long" resultMap="wtSku">
        SELECT
            id,

            p_id,
            goods_code,
            brand_id,
            sku_code,
            goods_spec,
            status,

            sku_name

        FROM t_wt_sku
        WHERE status = 1
              and del_state = 1
              and p_id = #{productId}
        group by sku_code
    </select>


    <!--根据skuCode查询商品sku信息-->
    <select id="getWtSkuBySkuCode" parameterType="java.lang.String" resultMap="wtSku">
        SELECT
            id,
            branches_id,
            p_id,
            goods_code,
            brand_id,
            sku_code,
            sku_name,
            goods_pic,
            goods_bar,
            type_code,
            goods_spec,
            goods_weight,
            goods_util,
            goods_size,
            goods_color,
            status,
            cost_price,
            price,
            on_sales,
            sell_price,
            shelf_on_time,
            shell_off_reason,
            create_id,
            create_time,
            update_id,
            update_time,
            del_state,
            version
        FROM t_wt_sku
        WHERE sku_code = #{productSkuCode}
    </select>


    <!--根据套系编号查询商品sku信息-->
    <select id="getWtSkuListBySeriesSkuCode" parameterType="java.lang.String" resultMap="wtSku">
        SELECT
            p_id,
            goods_code,
            brand_id,
            sku_code,
            sku_name,
            goods_pic,
            goods_bar,
            type_code,
            sku_name,
            goods_spec,
            goods_weight,
            goods_util
        FROM t_wt_sku s, t_wt_gift g
        WHERE s.sku_code = g.sku_code
              and g.series_sku_code = #{seriesSkuCode}
        group by s.sku_code
    </select>


    <!--插入商品sku表-->
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO t_wt_sku(id,branches_id,p_id,goods_code,
        brand_id,sku_code,sku_name,goods_pic,goods_bar,type_code,goods_spec,
        goods_weight,goods_util,goods_size,goods_color,
        status,cost_price,price,on_sales,sell_price,
        shelf_on_time,shell_off_reason,create_id,
        create_time,update_id,update_time,update_name,version)
        VALUES
        <foreach collection="list" separator="," item="item" index="index">
            (#{item.id},#{item.branchesId},#{item.pId},#{item.goodsCode},#{item.brandId},
            #{item.skuCode},#{item.skuName},#{item.goodsPic},#{item.goodsBar},#{item.typeCode},#{item.goodsSpec},
            #{item.goodsWeight},#{item.goodsUtil},#{item.goodsSize},
            #{item.goodsColor},#{item.status},#{item.costPrice},#{item.price},#{item.onSales},
            #{item.sellPrice},#{item.shelfOnTime},#{item.shellOffReason},#{item.createId},
            #{item.createTime},#{item.updateId},#{item.updateTime},#{item.updateName},#{item.version})
        </foreach>
    </insert>


    <!--根据分支机构id和skuCode更新商品删除状态-->
    <update id="setDelStatusBySkuCodeBranchesId">
        UPDATE t_wt_sku
        <set>


            <!-- 更新删除状态【1正常，0删除】 -->
            <if test="delState!=null">
                del_state=#{delState},
            </if>

            <!-- 更新修改者 -->
            <if test="loginId!=null">
                update_id=#{loginId},
            </if>

            <!-- 更新修改者 -->
            <if test="loginName!=null and loginName!=''">
                update_name=#{loginName},
            </if>
            <!-- 更新修改时间 -->
            <if test="updateTime!=null">
                update_time=#{updateTime},
            </if>
            status=0
        </set>
        WHERE sku_code =#{skuCode}
        and branches_id in
        <foreach collection="branchesList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </update>


    <!--根据分支机构id和skuCode更新商品价格-->
    <update id="setBranchesPriceBySkuCodeBranchesId">
        UPDATE t_wt_sku
        <set>


            <!-- 更新水站销售价格 -->
            <if test="price!=null">
                sell_price=#{price},
            </if>

            <!-- 更新修改者 -->
            <if test="loginId!=null">
                update_id=#{loginId},
            </if>
            <!-- 更新修改时间 -->
            <if test="updateTime!=null">
                update_time=#{updateTime},
            </if>
            <!-- 更新修改者 -->
            <if test="loginName!=null and loginName!=''">
                update_name=#{loginName},
            </if>
            <!-- 更新删除状态【1正常，0删除】 -->
            <if test="delState!=null">
                del_state=#{delState},
            </if>

        </set>
        WHERE sku_code =#{skuCode}
        and branches_id=#{branchesId}
    </update>


    <!--根据skuCode查询商品简要信息-->
    <select id="getProductSimpleEntityByProductSkuCode" parameterType="java.lang.String"
            resultType="com.gt.manager.entity.wtadmin.ProductSimpleEntity">
        SELECT
            n1.*,
            n2.category_id   parentCategoryId,
            n2.category_code parentCategoryCode,
            n2.category_name parentCategoryName
        FROM
            (SELECT
                 s.p_id           productId,
                 p.goods_name     productName,
                 s.sku_code       productSkuCode,
                 s.brand_id       brandId,
                 b.NAME           brandName,
                 c1.category_id   categoryId,
                 c1.category_code categoryCode,
                 c1.category_name categoryName,
                 c1.parent_category_id
             FROM
                 t_wt_sku s
                 LEFT JOIN t_wt_product p ON s.p_id = p.id
                 LEFT JOIN t_wt_brand b ON s.brand_id = b.id
                 LEFT JOIN t_wt_category c1 ON s.type_code = c1.category_code
            ) n1
            LEFT JOIN t_wt_category n2 ON n1.parent_category_id = n2.category_id
        WHERE
            n1.productSkuCode = #{skuCode}
        GROUP BY
            n1.productSkuCode
    </select>


    <!--商品ID和分支机构ID查询商品sku表-->
    <select id="getProductSkuByBranchesIdProductId" resultMap="wtSku">
        SELECT
            id,
            branches_id,
            p_id,
            goods_code,
            brand_id,
            sku_code,
            sku_name,
            goods_pic,
            goods_bar,
            type_code,
            goods_spec,
            goods_weight,
            goods_util,
            goods_size,
            goods_color,
            status,
            cost_price,
            price,
            on_sales,
            sell_price,
            shelf_on_time,
            shell_off_reason,
            create_id,
            create_time,
            update_id,
            update_time,
            del_state,
            version
        FROM t_wt_sku
        WHERE branches_id = #{branchesId}
              and p_id = #{productId}
    </select>

    <!--根据skuCode和分支机构ID查询sku信息-->

    <select id="getWtSkuBySkuCodeBranchesId" resultMap="wtSku">
        SELECT
            id,
            branches_id,
            p_id,
            goods_code,
            brand_id,
            sku_code,
            sku_name,
            goods_pic,
            goods_bar,
            type_code,
            goods_spec,
            goods_weight,
            goods_util,
            goods_size,
            goods_color,
            status,
            cost_price,
            price,
            on_sales,
            sell_price,
            shelf_on_time,
            shell_off_reason,
            create_id,
            create_time,
            update_id,
            update_time,
            del_state,
            version
        FROM t_wt_sku
        WHERE branches_id = #{branchesId}
              and sku_code = #{skuCode}
    </select>

    <!--根据用户ID和商品ID查询sku信息-->
    <select id="getWtSkuByUserIdProductId" resultMap="wtSku">
        SELECT
            s.id,
            s.branches_id,
            s.p_id,
            goods_code,
            s.brand_id,
            s.sku_code,
            sku_name,
            goods_pic,
            s.goods_bar,
            s.type_code,
            s.goods_spec,
            s.sell_price
        FROM t_wt_sku s, t_wt_user_ticket t
        WHERE s.sku_code = t.sku_code
              and t.user_id = #{userId}
              and s.p_id = #{productId}
        GROUP BY s.sku_code
    </select>


    <!--根据skuCode查询详细信息-->

    <select id="selectDetailProductBySkuCode" parameterType="java.lang.String"
            resultType="com.gt.manager.entity.wtadmin.ProductDetailEntity">
        SELECT
            s.p_id           productId,
            p.goods_name     productName,
            s.sku_code       productSkuCode,
            s.brand_id       brandId,
            b.name           brandName,
            c2.category_id   parentCategoryId,
            c2.category_code parentCategoryCode,
            c2.category_name parentCategoryName,
            c1.category_id   categoryId,
            p.type_code      categoryCode,
            c1.category_name categoryName,
            s.id             skuId,
            s.sku_code       skuCode,
            p.goods_photos   productPic,
            p.goods_profile  productProfile,
            s.sku_name       skuName,
            s.goods_pic      goodsCarPic


        FROM t_wt_sku s
            LEFT JOIN t_wt_product p on s.p_id = p.id
            LEFT JOIN t_wt_brand b on s.brand_id = b.id
            LEFT JOIN t_wt_category c1 on p.type_code = c1.category_code
            LEFT JOIN t_wt_category c2 ON c1.parent_category_id = c2.category_id
        where
            s.sku_code = #{skuCode}
        GROUP BY s.sku_code
    </select>

    <!--主键查询商品sku表-->
    <select id="selectIdListBySkuCodeList" parameterType="java.util.Map" resultType="java.lang.Long">
        SELECT
        id

        FROM t_wt_sku
        WHERE del_state=1 and
        sku_code in
        <foreach collection="skuCodeList" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </select>


</mapper>